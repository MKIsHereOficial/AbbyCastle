<div id="expertise_container_<%= data.name.split(" ").join("").replace("(", "").replace(")", "") %>" class="expertise_container">
    <style>
        #expertise_container_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %> {
            width: 20rem;

            display: flex;
            justify-content: space-around; 
            align-items: center;
        }
        #expertise_container_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %> .expertise_value {
            margin-left: auto;
        }
        #expertise_container_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %> input[name="expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>"] {
            max-width: 100px;
            outline: none;
            text-align: center;
            border-radius: 5px 15px 5px 15px;
            border: 0.1px solid var(--main-color);

        }
        #expertise_container_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %> input[name="expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>"]:hover {
            border: 1px solid var(--main-color);
    
            box-shadow: 0px 0px 2.5px var(--main-color),
            0px 1px 2.5px var(--main-color),
            1px 0px 2.5px var(--main-color);
        }
    
        #expertise_container_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %> input[name="expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>"]::-webkit-inner-spin-button {
            display: none;
        }

        .expertise_value {
          display: flex;
          justify-content: center;
          align-items: center;
          flex-direction: row;
        }

        .statusBtn {
            background: var(--main-color);
            color: black;
            border-radius: .45rem;
            border: 0.1px solid var(--main-color);
            width: var(--size, 15px);
            height: var(--size);
        }

        .<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>_roll {
          border-radius: .45rem;
          background: transparent;

          user-select: none;
          cursor: pointer;

          margin-left: .25rem;
        }

    </style>
    
    <label for="expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>"><%=  data.name %></label>
    <div class="expertise_value">
    
        <% if (true) { %>
          <div class="<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>_roll">[ROLAR]</div>
        <% } %>

        
        <input value="<%=  data.value %>" name="expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>" id="expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>" >

    </div>

    <script>
      var onload = () => {
        const container = document.querySelector(`#expertise_container_<%= data.name.split(" ").join("").replace("(", "").replace(")", "") %>`);
        const label = document.querySelector(`label[for="expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>"]`);
        const rollButton = document.querySelector('.<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>_roll');
        const val = document.querySelector('#expertise_<%=  data.name.split(" ").join("").replace("(", "").replace(")", "") %>');

        var deleted = false;

        val.onchange = () => {
          if (!deleted) minMax();
        }

        function minMax() {
          const value = parseInt(val.value);
          const [minValue, maxValue] = [1, 20];
          
          if (value > maxValue) {
            val.value = maxValue;
          } else if (value < minValue) {
            val.value = minValue;
          }
        }
        if (rollButton && !deleted) {
          //const defaultText = rollButton.textContent;

          rollButton.onclick = async () => {
            if (deleted) return;
            const value = random.integer(1, 20);

            const al = document.createElement('h1');
            al.classList.add("windowAlert");
            al.setAttribute('style', 'max-width: 30px !important;');

            const values = [
              {normal: 20, good: false, extreme: false},
              {normal: 19, good: 20, extreme: false},
              {normal: 18, good: 20, extreme: false},
              {normal: 17, good: 19, extreme: false},
              {normal: 16, good: 19, extreme: 20},
              {normal: 15, good: 18, extreme: 20},
              {normal: 14, good: 18, extreme: 20},
              {normal: 13, good: 17, extreme: 20},
              {normal: 12, good: 17, extreme: 20},
              {normal: 11, good: 16, extreme: 19},
              {normal: 10, good: 16, extreme: 19},
              {normal: 9, good: 15, extreme: 19},
              {normal: 8, good: 15, extreme: 19},
              {normal: 7, good: 14, extreme: 19},
              {normal: 6, good: 14, extreme: 18},
              {normal: 5, good: 13, extreme: 18},
              {normal: 4, good: 13, extreme: 18},
              {normal: 3, good: 12, extreme: 18},
              {normal: 2, good: 12, extreme: 18},
              {normal: 1, good: 11, extreme: 17},
            ];

            var success = `${value}\nFalha`;
            
            const v = values.map(async v => {
              const {normal, good, extreme} = v;

              if (values.indexOf(v) + 1 != parseInt(val.value)) return null;

              console.log(value);
              console.log(v);
              if (!extreme && !good) {
                if (value === normal) {
                  success = [value, 'Sucesso Normal'];
                } else {
                  success = [value, "Falha"];
                }
              } else if (!extreme) {
                if (value > normal && value <= good) {
                  success = [value, 'Sucesso Bom'];
                }else if (value >= normal) {
                  success = [value, 'Sucesso Normal'];
                } else {
                  success = [value, "Falha"];
                }
              } else {
                if (value >= extreme) {
                  success = [value, 'Sucesso Extremo'];
                } else if (value >= good) {
                  success = [value, 'Sucesso Bom'];
                } else if (value >= normal) {
                  success = [value, 'Sucesso Normal'];
                }  else {
                  success = [value, "Falha"];
                }


                var onBot = {
                  title: '[<%= charId %>/<%= charName %>]',
                  body: `Perícia: <%= data.name %>, Valor: ${val.value}\nValor do roll: ` + success.join(", "), 
                }
                var onSite = `Perícia: <%= data.name %>, Valor: ${val.value}; Valor do roll: ` + success.join(", ");

                console.log(onBot, onSite);

                onBot = JSON.stringify(onBot);

                console.log('<%= data.name %>', val.value);

                await axios.get(`https://abbycastle.mkishereoficial.repl.co/logs?onSite=${onSite}&onBot=${onBot}`).catch(console.error).then(console.dir);
              }
            });

            al.textContent = success.join("\n");

            document.body.appendChild(al);
            setTimeout(() => {
              al.classList.add("vanish");
              setTimeout(() => {
                al.remove();
              }, 500);
            }, 500);
          }
        }
      }

      onload();
    </script>
</div>